digraph gocallvis {
    label="github.com/miku/span/cmd/span-tag";
    labeljust="l";
    fontname="Arial";
    fontsize="14";
    rankdir="LR";
    bgcolor="lightgray";
    style="solid";
    penwidth="0.5";
    pad="0.0";
    nodesep="0.35";

    node [shape="ellipse" style="filled" fillcolor="honeydew" fontname="Verdana" penwidth="1.0" margin="0.05,0.0"];
    edge [minlen="2"]

    subgraph "cluster_focus" {
        fontsize="18";
bgcolor="#e6ecfa";
label="main";
labelloc="t";
labeljust="c";

        "github.com/miku/span/cmd/span-tag.main$1" [ label="main$1" style="dotted,filled" fillcolor="lightblue" ]
        "encoding/json.Unmarshal" [ fillcolor="#adedad" label="json\nUnmarshal" penwidth="1.5" ]
        "(*github.com/miku/span/filter.Tagger).Tag" [ fillcolor="moccasin" label="filter\n(*Tagger).Tag" penwidth="1.5" ]
        "github.com/miku/span/cmd/span-tag.DroppableLabels" [ fillcolor="lightblue" label="DroppableLabels" penwidth="1.5" ]
        "strings.TrimSpace" [ fillcolor="#adedad" label="strings\nTrimSpace" penwidth="1.5" ]
        "net/url.QueryEscape" [ fillcolor="#adedad" label="url\nQueryEscape" penwidth="1.5" ]
        "fmt.Sprintf" [ fillcolor="#adedad" label="fmt\nSprintf" penwidth="1.5" ]
        "github.com/sirupsen/logrus.Printf" [ fillcolor="moccasin" label="logrus\nPrintf" penwidth="1.5" ]
        "net/http.Get" [ fillcolor="#adedad" label="http\nGet" penwidth="1.5" ]
        "io.TeeReader" [ fillcolor="#adedad" label="io\nTeeReader" penwidth="1.5" ]
        "encoding/json.NewDecoder" [ label="json\nNewDecoder" penwidth="1.5" fillcolor="#adedad" ]
        "(*encoding/json.Decoder).Decode" [ fillcolor="#adedad" label="json\n(*Decoder).Decode" penwidth="1.5" ]
        "(*bytes.Buffer).String" [ fillcolor="#adedad" label="bytes\n(*Buffer).String" penwidth="1.5" ]
        "github.com/miku/span/cmd/span-tag.stringSliceContains" [ penwidth="0.5" fillcolor="lightblue" label="stringSliceContains" ]
        "github.com/miku/span/cmd/span-tag.preferencePosition" [ fillcolor="lightblue" label="preferencePosition" penwidth="0.5" ]
        "strings.Fields" [ fillcolor="#adedad" label="strings\nFields" penwidth="1.5" ]
        "(*net/http.bodyEOFSignal).Close" [ fillcolor="#adedad" label="http\n(*bodyEOFSignal).Close" penwidth="1.5" ]
        "(*net/http.gzipReader).Close" [ fillcolor="#adedad" label="http\n(*gzipReader).Close" penwidth="1.5" ]
        "(*net/http.body).Close" [ label="http\n(*body).Close" penwidth="1.5" fillcolor="#adedad" ]
        "(net/http.noBody).Close" [ fillcolor="#adedad" label="http\n(noBody).Close" penwidth="1.5" ]
        "(*net/http.cancelTimerBody).Close" [ fillcolor="#adedad" label="http\n(*cancelTimerBody).Close" penwidth="1.5" ]
        "(*net/http.http2gzipReader).Close" [ fillcolor="#adedad" label="http\n(*http2gzipReader).Close" penwidth="1.5" ]
        "(net/http.http2transportResponseBody).Close" [ fillcolor="#adedad" label="http\n(http2transportResponseBody).Close" penwidth="1.5" ]
        "(io/ioutil.nopCloser).Close" [ fillcolor="#adedad" label="ioutil\n(nopCloser).Close" penwidth="1.5" ]
        "(*crypto/tls.Conn).Close" [ fillcolor="#adedad" label="tls\n(*Conn).Close" penwidth="1.5" ]
        "(*net.conn).Close" [ fillcolor="#adedad" label="net\n(*conn).Close" penwidth="1.5" ]
        "(*net/http.connCloseListener).Close" [ label="http\n(*connCloseListener).Close" penwidth="1.5" fillcolor="#adedad" ]
        "encoding/json.Marshal" [ fillcolor="#adedad" label="json\nMarshal" penwidth="1.5" ]
        "github.com/miku/span/cmd/span-tag.removeEach" [ label="removeEach" penwidth="0.5" fillcolor="lightblue" ]
        "(*github.com/miku/span/parallel.Processor).Run$1" [ style="dotted,filled" fillcolor="moccasin" label="parallel\n(*Processor).Run$1" ]
        "(*github.com/miku/span/parallel.Processor).Run" [ fillcolor="moccasin" label="parallel\n(*Processor).Run" penwidth="1.5" ]
        "github.com/miku/span/cmd/span-tag.init" [ label="init" penwidth="0.5" fillcolor="lightblue" ]
        "flag.String" [ fillcolor="#adedad" label="flag\nString" penwidth="1.5" ]
        "flag.Bool" [ fillcolor="#adedad" label="flag\nBool" penwidth="1.5" ]
        "flag.Int" [ fillcolor="#adedad" label="flag\nInt" penwidth="1.5" ]
        "runtime.NumCPU" [ penwidth="1.5" fillcolor="#adedad" label="runtime\nNumCPU" ]
        "github.com/miku/span/cmd/span-tag.main" [ fillcolor="lightblue" label="main" penwidth="0.5" ]
        "flag.Parse" [ fillcolor="#adedad" label="flag\nParse" penwidth="1.5" ]
        "fmt.Println" [ label="fmt\nPrintln" penwidth="1.5" fillcolor="#adedad" ]
        "os.Exit" [ fillcolor="#adedad" label="os\nExit" penwidth="1.5" ]
        "github.com/sirupsen/logrus.Fatal" [ fillcolor="moccasin" label="logrus\nFatal" penwidth="1.5" ]
        "os.Create" [ fillcolor="#adedad" label="os\nCreate" penwidth="1.5" ]
        "runtime/pprof.StartCPUProfile" [ label="pprof\nStartCPUProfile" penwidth="1.5" fillcolor="#adedad" ]
        "runtime/pprof.StopCPUProfile" [ fillcolor="#adedad" label="pprof\nStopCPUProfile" penwidth="1.5" ]
        "github.com/miku/span/solrutil.PrependHTTP" [ fillcolor="moccasin" label="solrutil\nPrependHTTP" penwidth="1.5" ]
        "github.com/miku/span.UnfreezeFilterConfig" [ fillcolor="moccasin" label="span\nUnfreezeFilterConfig" penwidth="1.5" ]
        "os.RemoveAll" [ penwidth="1.5" fillcolor="#adedad" label="os\nRemoveAll" ]
        "os.Open" [ fillcolor="#adedad" label="os\nOpen" penwidth="1.5" ]
        "bufio.NewWriter" [ label="bufio\nNewWriter" penwidth="1.5" fillcolor="#adedad" ]
        "(*bufio.Writer).Flush" [ fillcolor="#adedad" label="bufio\n(*Writer).Flush" penwidth="1.5" ]
        "flag.NArg" [ fillcolor="#adedad" label="flag\nNArg" penwidth="1.5" ]
        "(*os.File).Close" [ label="os\n(*File).Close" penwidth="1.5" fillcolor="#adedad" ]
        "flag.Args" [ fillcolor="#adedad" label="flag\nArgs" penwidth="1.5" ]
        "bufio.NewReader" [ fillcolor="#adedad" label="bufio\nNewReader" penwidth="1.5" ]
        "github.com/miku/span/parallel.NewProcessor" [ fillcolor="moccasin" label="parallel\nNewProcessor" penwidth="1.5" ]
        "io.MultiReader" [ label="io\nMultiReader" penwidth="1.5" fillcolor="#adedad" ]
        "runtime.GC" [ fillcolor="#adedad" label="runtime\nGC" penwidth="1.5" ]
        "runtime/pprof.WriteHeapProfile" [ penwidth="1.5" fillcolor="#adedad" label="pprof\nWriteHeapProfile" ]

    }

    "github.com/miku/span/cmd/span-tag.main$1" -> "encoding/json.Unmarshal" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main$1" -> "(*github.com/miku/span/filter.Tagger).Tag" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "strings.TrimSpace" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "net/url.QueryEscape" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "fmt.Sprintf" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "github.com/sirupsen/logrus.Printf" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "net/http.Get" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "io.TeeReader" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "encoding/json.NewDecoder" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "(*encoding/json.Decoder).Decode" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "(*bytes.Buffer).String" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "github.com/miku/span/cmd/span-tag.stringSliceContains" [  ]
    "github.com/miku/span/cmd/span-tag.preferencePosition" -> "strings.Fields" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.preferencePosition" -> "strings.TrimSpace" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "github.com/miku/span/cmd/span-tag.preferencePosition" [  ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "(*net/http.bodyEOFSignal).Close" [ style="dashed" arrowhead="normalnoneodiamond" color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "(*net/http.gzipReader).Close" [ style="dashed" arrowhead="normalnoneodiamond" color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "(*net/http.body).Close" [ style="dashed" arrowhead="normalnoneodiamond" color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "(net/http.noBody).Close" [ style="dashed" arrowhead="normalnoneodiamond" color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "(*net/http.cancelTimerBody).Close" [ arrowhead="normalnoneodiamond" color="saddlebrown" style="dashed" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "(*net/http.http2gzipReader).Close" [ style="dashed" arrowhead="normalnoneodiamond" color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "(net/http.http2transportResponseBody).Close" [ style="dashed" arrowhead="normalnoneodiamond" color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "(io/ioutil.nopCloser).Close" [ style="dashed" arrowhead="normalnoneodiamond" color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "(*crypto/tls.Conn).Close" [ arrowhead="normalnoneodiamond" color="saddlebrown" style="dashed" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "(*net.conn).Close" [ color="saddlebrown" style="dashed" arrowhead="normalnoneodiamond" ]
    "github.com/miku/span/cmd/span-tag.DroppableLabels" -> "(*net/http.connCloseListener).Close" [ style="dashed" arrowhead="normalnoneodiamond" color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main$1" -> "github.com/miku/span/cmd/span-tag.DroppableLabels" [  ]
    "github.com/miku/span/cmd/span-tag.main$1" -> "encoding/json.Marshal" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.removeEach" -> "github.com/miku/span/cmd/span-tag.stringSliceContains" [  ]
    "github.com/miku/span/cmd/span-tag.main$1" -> "github.com/miku/span/cmd/span-tag.removeEach" [  ]
    "github.com/miku/span/cmd/span-tag.main$1" -> "github.com/sirupsen/logrus.Printf" [ color="saddlebrown" ]
    "(*github.com/miku/span/parallel.Processor).Run$1" -> "github.com/miku/span/cmd/span-tag.main$1" [ style="dashed" color="saddlebrown" ]
    "(*github.com/miku/span/parallel.Processor).Run" -> "(*github.com/miku/span/parallel.Processor).Run$1" [ arrowhead="normalnoneodot" color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.init" -> "flag.String" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.init" -> "flag.Bool" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.init" -> "flag.Int" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.init" -> "runtime.NumCPU" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "flag.Parse" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "fmt.Println" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "os.Exit" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "github.com/sirupsen/logrus.Fatal" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "os.Create" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "runtime/pprof.StartCPUProfile" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "runtime/pprof.StopCPUProfile" [ arrowhead="normalnoneodiamond" color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "github.com/miku/span/solrutil.PrependHTTP" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "github.com/miku/span.UnfreezeFilterConfig" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "encoding/json.Unmarshal" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "github.com/sirupsen/logrus.Printf" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "os.RemoveAll" [ arrowhead="normalnoneodiamond" color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "os.Open" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "bufio.NewWriter" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "(*bufio.Writer).Flush" [ arrowhead="normalnoneodiamond" color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "flag.NArg" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "(*os.File).Close" [ arrowhead="normalnoneodiamond" color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "encoding/json.NewDecoder" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "(*encoding/json.Decoder).Decode" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "flag.Args" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "bufio.NewReader" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "github.com/miku/span/parallel.NewProcessor" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "(*github.com/miku/span/parallel.Processor).Run" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "io.MultiReader" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "runtime.GC" [ color="saddlebrown" ]
    "github.com/miku/span/cmd/span-tag.main" -> "runtime/pprof.WriteHeapProfile" [ color="saddlebrown" ]
}
